syntax = "proto3";

package auth;

import "google/protobuf/timestamp.proto";

service AuthHealthService {
  rpc check (AuthHealthCheckRequest) returns (AuthHealthCheckResponse);
}

message AuthHealthCheckRequest {
}

message AuthHealthCheckResponse {
  bool status = 1;
}

enum SystemUserType {
  CUSTOMER = 0;
  STAFF = 1;
}

enum TokenType {
  RESET = 0;
  VERIFY = 1;
}

message User {
  int32 id = 1;
  SystemUserType type = 2;
  optional Staff staff = 3;
}


message UserResponse {
  User data = 1;
}

message UserListRequest {
  optional string sort = 1; // ["field_name", "ASC/DESC"]
  optional string range = 2;  // [start, end]
  optional string filter = 3; // {"field": "value", "field2": "value2"}
}

message UserGetOneRequest {
  int32 id = 1;
}

message UserListResponse {
  repeated User data = 1;
  int32 total_count = 2;
}


service UserService {
  rpc getOne (UserGetOneRequest) returns (UserResponse);
  rpc getList (UserListRequest) returns (UserListResponse);
}

message PermissionType {
  int32 id = 1;
  string name = 2;
  optional string description = 3;
}

message PermissionResource {
  int32 id = 1;
  string name = 2;
  optional string description = 3;
}

message Permission {
  int32 id = 1;
  optional PermissionType type = 2;
  optional PermissionResource resource = 3;
  string name = 4;
  optional string description = 5;
}

message StaffPermission {
  int32 id = 1;
  optional Permission permission = 2;
  int32 created_by_id = 3;
  optional google.protobuf.Timestamp created_at = 4;
}

message Staff {
  int32 id = 1;
  int32 user_id = 2;
  string first_name = 3;
  string last_name = 4;
  string email = 5;
  bool is_root = 6;
  string department = 7;
  int32 position_id = 8;
  optional string profile_path = 9;
  optional string cover_photo_path = 10;
  optional string bio = 11;
  optional google.protobuf.Timestamp created_at = 12;
  optional google.protobuf.Timestamp updated_at = 13;
  optional google.protobuf.Timestamp deleted_at = 14;
  optional int32 created_by_id = 15;
  optional int32 updated_by_id = 16;
  optional int32 deleted_by_id = 17;
}

message StaffCreateRequest {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  string password = 4;
  string department = 5;
  int32 position_id = 6;
  optional string profile_path = 7;
  optional string cover_photo_path = 8;
  optional string bio = 9;
  int32 created_by_id = 10;
}

message StaffResponse {
  Staff data = 1;
}

message StaffUpdateRequest {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  optional string password = 4;
  string department = 5;
  int32 position_id = 6;
  optional string profile_path = 7;
  optional string cover_photo_path = 8;
  optional string bio = 9;
  int32 updated_by_id = 10;
  int32 id = 11;
}

message StaffDeleteRequest {
  int32 id = 1;
  optional int32 deleted_by_id = 2;
}

message StaffListRequest {
  optional string sort = 1; // ["field_name", "ASC/DESC"]
  optional string range = 2;  // [start, end]
  optional string filter = 3; // {"field": "value", "field2": "value2"}
}

message StaffGetOneRequest {
  int32 id = 1;
}

message StaffListResponse {
  repeated Staff data = 1;
  int32 total_count = 2;
}

service StaffService {
  rpc create (StaffCreateRequest) returns (StaffResponse);
  rpc update (StaffUpdateRequest) returns (StaffResponse);
  rpc delete (StaffDeleteRequest) returns (StaffResponse);
  rpc getOne (StaffGetOneRequest) returns (StaffResponse);
  rpc getList (StaffListRequest) returns (StaffListResponse);
}

message StaffPosition {
  int32 id = 1;
  string name = 2;
  optional string description = 3;
  optional google.protobuf.Timestamp created_at = 4;
  optional google.protobuf.Timestamp updated_at = 5;
  optional google.protobuf.Timestamp deleted_at = 6;
  optional int32 created_by_id = 7;
  optional int32 updated_by_id = 8;
  optional int32 deleted_by_id = 9;
}

message StaffPositionCreateRequest {
  string name = 1;
  optional string description = 2;
  int32 created_by_id = 3;
}

message StaffPositionResponse {
  StaffPosition data = 1;
}

message StaffPositionUpdateRequest {
  string name = 1;
  optional string description = 2;
  int32 updated_by_id = 3;
  int32 id = 4;
}

message StaffPositionDeleteRequest {
  int32 id = 1;
  optional int32 deleted_by_id = 2;
}

message StaffPositionListRequest {
  optional string sort = 1; // ["field_name", "ASC/DESC"]
  optional string range = 2;  // [start, end]
  optional string filter = 3; // {"field": "value", "field2": "value2"}
}

message StaffPositionGetOneRequest {
  int32 id = 1;
}

message StaffPositionListResponse {
  repeated StaffPosition data = 1;
  int32 total_count = 2;
}

service StaffPositionService {
  rpc create (StaffPositionCreateRequest) returns (StaffPositionResponse);
  rpc update (StaffPositionUpdateRequest) returns (StaffPositionResponse);
  rpc delete (StaffPositionDeleteRequest) returns (StaffPositionResponse);
  rpc getOne (StaffPositionGetOneRequest) returns (StaffPositionResponse);
  rpc getList (StaffPositionListRequest) returns (StaffPositionListResponse);
}

message StaffLoginRequest {
  string email = 1;
  string password = 2;
  bool remember_me = 3;
}

message StaffLoginResponse {
  string access_token = 1;
  repeated StaffPermission permissions = 2;
  bool is_root = 3;
}

message StaffValidateRequest {
  string email = 1;
  string password = 2;
}

message StaffValidateResponse {
  Staff data = 1;
}

service StaffAuthService {
  rpc login (StaffLoginRequest) returns (StaffLoginResponse);
  rpc validate (StaffValidateRequest) returns (StaffValidateResponse);
}

message PermissionResponse {
  Permission data = 1;
}

message PermissionListRequest {
  optional string sort = 1; // ["field_name", "ASC/DESC"]
  optional string range = 2;  // [start, end]
  optional string filter = 3; // {"field": "value", "field2": "value2"}
}

message PermissionGetOneRequest {
  int32 id = 1;
}

message PermissionListResponse {
  repeated Permission data = 1;
  int32 total_count = 2;
}

service PermissionService {
  rpc getOne (PermissionGetOneRequest) returns (PermissionResponse);
  rpc getList (PermissionListRequest) returns (PermissionListResponse);
}

message StaffPermissionAssignRequest {
  int32 staff_id = 1;
  repeated int32 permission_ids = 2;
  int32 created_by_id = 3;
}

message StaffPermissionListByStaffRequest {
  int32 staff_id = 1;
}

message StaffPermissionListResponse {
  repeated StaffPermission data = 1;
  int32 total_count = 2;
}

service StaffPermissionService {
  rpc assign (StaffPermissionAssignRequest) returns (StaffPermissionListResponse);
  rpc getListByStaff (StaffPermissionListByStaffRequest) returns (StaffPermissionListResponse);
}