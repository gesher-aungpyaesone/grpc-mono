syntax = "proto3";

package ads_gen;

import "google/protobuf/timestamp.proto";

service AdsGenHealthService {
  rpc check (AdsGenHealthCheckRequest) returns (AdsGenHealthCheckResponse);
}

message AdsGenHealthCheckRequest {
}

message AdsGenHealthCheckResponse {
  bool status = 1;
}

// language
message Language {
  int32 id = 1;
  string name = 2;
  optional string description = 3;
  optional google.protobuf.Timestamp created_at = 4;
  optional google.protobuf.Timestamp updated_at = 5;
  optional google.protobuf.Timestamp deleted_at = 6;
  optional int32 created_by_id = 7;
  optional int32 updated_by_id = 8;
  optional int32 deleted_by_id = 9;
}

message LanguageCreateRequest {
  string name = 1;
  optional string description = 2;
  int32 created_by_id = 3;
}

message LanguageResponse {
  Language data = 1;
}

message LanguageUpdateRequest {
  string name = 1;
  optional string description = 2;
  int32 updated_by_id = 3;
  int32 id = 4;
}

message LanguageDeleteRequest {
  int32 id = 1;
  optional int32 deleted_by_id = 2;
}

message LanguageListRequest {
  optional string sort = 1; // ["field_name", "ASC/DESC"]
  optional string range = 2;  // [start, end]
  optional string filter = 3; // {"field": "value", "field2": "value2"}
  optional int32  current_user_id = 4;
}

message LanguageGetOneRequest {
  int32 id = 1;
}

message LanguageListResponse {
  repeated Language data = 1;
  int32 total_count = 2;
}

service LanguageService {
  rpc create (LanguageCreateRequest) returns (LanguageResponse);
  rpc update (LanguageUpdateRequest) returns (LanguageResponse);
  rpc delete (LanguageDeleteRequest) returns (LanguageResponse);
  rpc getOne (LanguageGetOneRequest) returns (LanguageResponse);
  rpc getList (LanguageListRequest) returns (LanguageListResponse);
}

// platform
message Platform {
  int32 id = 1;
  string name = 2;
  optional string description = 3;
  optional google.protobuf.Timestamp created_at = 4;
  optional google.protobuf.Timestamp updated_at = 5;
  optional google.protobuf.Timestamp deleted_at = 6;
  optional int32 created_by_id = 7;
  optional int32 updated_by_id = 8;
  optional int32 deleted_by_id = 9;
}

message PlatformCreateRequest {
  string name = 1;
  optional string description = 2;
  int32 created_by_id = 3;
}

message PlatformResponse {
  Platform data = 1;
}

message PlatformUpdateRequest {
  string name = 1;
  optional string description = 2;
  int32 updated_by_id = 3;
  int32 id = 4;
}

message PlatformDeleteRequest {
  int32 id = 1;
  optional int32 deleted_by_id = 2;
}

message PlatformListRequest {
  optional string sort = 1; // ["field_name", "ASC/DESC"]
  optional string range = 2;  // [start, end]
  optional string filter = 3; // {"field": "value", "field2": "value2"}
  optional int32  current_user_id = 4;
}

message PlatformGetOneRequest {
  int32 id = 1;
}

message PlatformListResponse {
  repeated Platform data = 1;
  int32 total_count = 2;
}

service PlatformService {
  rpc create (PlatformCreateRequest) returns (PlatformResponse);
  rpc update (PlatformUpdateRequest) returns (PlatformResponse);
  rpc delete (PlatformDeleteRequest) returns (PlatformResponse);
  rpc getOne (PlatformGetOneRequest) returns (PlatformResponse);
  rpc getList (PlatformListRequest) returns (PlatformListResponse);
}

// Tone
message Tone {
  int32 id = 1;
  string name = 2;
  optional string description = 3;
  optional google.protobuf.Timestamp created_at = 4;
  optional google.protobuf.Timestamp updated_at = 5;
  optional google.protobuf.Timestamp deleted_at = 6;
  optional int32 created_by_id = 7;
  optional int32 updated_by_id = 8;
  optional int32 deleted_by_id = 9;
}

message ToneCreateRequest {
  string name = 1;
  optional string description = 2;
  int32 created_by_id = 3;
}

message ToneResponse {
  Tone data = 1;
}

message ToneUpdateRequest {
  string name = 1;
  optional string description = 2;
  int32 updated_by_id = 3;
  int32 id = 4;
}

message ToneDeleteRequest {
  int32 id = 1;
  optional int32 deleted_by_id = 2;
}

message ToneListRequest {
  optional string sort = 1; // ["field_name", "ASC/DESC"]
  optional string range = 2;  // [start, end]
  optional string filter = 3; // {"field": "value", "field2": "value2"}
  optional int32  current_user_id = 4;
}

message ToneGetOneRequest {
  int32 id = 1;
}

message ToneListResponse {
  repeated Tone data = 1;
  int32 total_count = 2;
}

service ToneService {
  rpc create (ToneCreateRequest) returns (ToneResponse);
  rpc update (ToneUpdateRequest) returns (ToneResponse);
  rpc delete (ToneDeleteRequest) returns (ToneResponse);
  rpc getOne (ToneGetOneRequest) returns (ToneResponse);
  rpc getList (ToneListRequest) returns (ToneListResponse);
}

// Target
message Target {
  int32 id = 1;
  string name = 2;
  optional string description = 3;
  optional google.protobuf.Timestamp created_at = 4;
  optional google.protobuf.Timestamp updated_at = 5;
  optional google.protobuf.Timestamp deleted_at = 6;
  optional int32 created_by_id = 7;
  optional int32 updated_by_id = 8;
  optional int32 deleted_by_id = 9;
}

message TargetCreateRequest {
  string name = 1;
  optional string description = 2;
  int32 created_by_id = 3;
}

message TargetResponse {
  Target data = 1;
}

message TargetUpdateRequest {
  string name = 1;
  optional string description = 2;
  int32 updated_by_id = 3;
  int32 id = 4;
}

message TargetDeleteRequest {
  int32 id = 1;
  optional int32 deleted_by_id = 2;
}

message TargetListRequest {
  optional string sort = 1; // ["field_name", "ASC/DESC"]
  optional string range = 2;  // [start, end]
  optional string filter = 3; // {"field": "value", "field2": "value2"}
  optional int32  current_user_id = 4;
}

message TargetGetOneRequest {
  int32 id = 1;
}

message TargetListResponse {
  repeated Target data = 1;
  int32 total_count = 2;
}

service TargetService {
  rpc create (TargetCreateRequest) returns (TargetResponse);
  rpc update (TargetUpdateRequest) returns (TargetResponse);
  rpc delete (TargetDeleteRequest) returns (TargetResponse);
  rpc getOne (TargetGetOneRequest) returns (TargetResponse);
  rpc getList (TargetListRequest) returns (TargetListResponse);
}

// Industry
message Industry {
  int32 id = 1;
  string name = 2;
  optional string description = 3;
  optional google.protobuf.Timestamp created_at = 4;
  optional google.protobuf.Timestamp updated_at = 5;
  optional google.protobuf.Timestamp deleted_at = 6;
  optional int32 created_by_id = 7;
  optional int32 updated_by_id = 8;
  optional int32 deleted_by_id = 9;
}

message IndustryCreateRequest {
  string name = 1;
  optional string description = 2;
  int32 created_by_id = 3;
}

message IndustryResponse {
  Industry data = 1;
}

message IndustryUpdateRequest {
  string name = 1;
  optional string description = 2;
  int32 updated_by_id = 3;
  int32 id = 4;
}

message IndustryDeleteRequest {
  int32 id = 1;
  optional int32 deleted_by_id = 2;
}

message IndustryListRequest {
  optional string sort = 1; // ["field_name", "ASC/DESC"]
  optional string range = 2;  // [start, end]
  optional string filter = 3; // {"field": "value", "field2": "value2"}
  optional int32  current_user_id = 4;
}

message IndustryGetOneRequest {
  int32 id = 1;
}

message IndustryListResponse {
  repeated Industry data = 1;
  int32 total_count = 2;
}

service IndustryService {
  rpc create (IndustryCreateRequest) returns (IndustryResponse);
  rpc update (IndustryUpdateRequest) returns (IndustryResponse);
  rpc delete (IndustryDeleteRequest) returns (IndustryResponse);
  rpc getOne (IndustryGetOneRequest) returns (IndustryResponse);
  rpc getList (IndustryListRequest) returns (IndustryListResponse);
}

// CompanySize
message CompanySize {
  int32 id = 1;
  string name = 2;
  optional string description = 3;
  optional google.protobuf.Timestamp created_at = 4;
  optional google.protobuf.Timestamp updated_at = 5;
  optional google.protobuf.Timestamp deleted_at = 6;
  optional int32 created_by_id = 7;
  optional int32 updated_by_id = 8;
  optional int32 deleted_by_id = 9;
}

message CompanySizeCreateRequest {
  string name = 1;
  optional string description = 2;
  int32 created_by_id = 3;
}

message CompanySizeResponse {
  CompanySize data = 1;
}

message CompanySizeUpdateRequest {
  string name = 1;
  optional string description = 2;
  int32 updated_by_id = 3;
  int32 id = 4;
}

message CompanySizeDeleteRequest {
  int32 id = 1;
  optional int32 deleted_by_id = 2;
}

message CompanySizeListRequest {
  optional string sort = 1; // ["field_name", "ASC/DESC"]
  optional string range = 2;  // [start, end]
  optional string filter = 3; // {"field": "value", "field2": "value2"}
  optional int32  current_user_id = 4;
}

message CompanySizeGetOneRequest {
  int32 id = 1;
}

message CompanySizeListResponse {
  repeated CompanySize data = 1;
  int32 total_count = 2;
}

service CompanySizeService {
  rpc create (CompanySizeCreateRequest) returns (CompanySizeResponse);
  rpc update (CompanySizeUpdateRequest) returns (CompanySizeResponse);
  rpc delete (CompanySizeDeleteRequest) returns (CompanySizeResponse);
  rpc getOne (CompanySizeGetOneRequest) returns (CompanySizeResponse);
  rpc getList (CompanySizeListRequest) returns (CompanySizeListResponse);
}

// CompanyType
message CompanyType {
  int32 id = 1;
  string name = 2;
  optional string description = 3;
  optional google.protobuf.Timestamp created_at = 4;
  optional google.protobuf.Timestamp updated_at = 5;
  optional google.protobuf.Timestamp deleted_at = 6;
  optional int32 created_by_id = 7;
  optional int32 updated_by_id = 8;
  optional int32 deleted_by_id = 9;
}

message CompanyTypeCreateRequest {
  string name = 1;
  optional string description = 2;
  int32 created_by_id = 3;
}

message CompanyTypeResponse {
  CompanyType data = 1;
}

message CompanyTypeUpdateRequest {
  string name = 1;
  optional string description = 2;
  int32 updated_by_id = 3;
  int32 id = 4;
}

message CompanyTypeDeleteRequest {
  int32 id = 1;
  optional int32 deleted_by_id = 2;
}

message CompanyTypeListRequest {
  optional string sort = 1; // ["field_name", "ASC/DESC"]
  optional string range = 2;  // [start, end]
  optional string filter = 3; // {"field": "value", "field2": "value2"}
  optional int32  current_user_id = 4;
}

message CompanyTypeGetOneRequest {
  int32 id = 1;
}

message CompanyTypeListResponse {
  repeated CompanyType data = 1;
  int32 total_count = 2;
}

service CompanyTypeService {
  rpc create (CompanyTypeCreateRequest) returns (CompanyTypeResponse);
  rpc update (CompanyTypeUpdateRequest) returns (CompanyTypeResponse);
  rpc delete (CompanyTypeDeleteRequest) returns (CompanyTypeResponse);
  rpc getOne (CompanyTypeGetOneRequest) returns (CompanyTypeResponse);
  rpc getList (CompanyTypeListRequest) returns (CompanyTypeListResponse);
}

// client company
message ClientCompany {
  int32 id = 1;
  string name = 2;
  optional string website_url = 3;
  optional string strength = 4;
  optional string others = 5;
  int32 industry_id = 6;
  int32 type_id = 7;
  int32 size_id = 8;
  optional google.protobuf.Timestamp created_at = 9;
  optional google.protobuf.Timestamp updated_at = 10;
  optional google.protobuf.Timestamp deleted_at = 11;
  optional int32 created_by_id = 12;
  optional int32 updated_by_id = 13;
  optional int32 deleted_by_id = 14;
  optional Industry industry = 15;
  optional CompanyType type = 16;
  optional CompanySize size = 17;
}

message ClientCompanyCreateRequest {
  string name = 1;
  optional string website_url = 2;
  optional string strength = 3;
  optional string others = 4;
  int32 industry_id = 5;
  int32 type_id = 6;
  int32 size_id = 7;
  int32 created_by_id = 8;
}

message ClientCompanyResponse {
  ClientCompany data = 1;
}

message ClientCompanyUpdateRequest {
  string name = 1;
  optional string website_url = 2;
  optional string strength = 3;
  optional string others = 4;
  int32 industry_id = 5;
  int32 type_id = 6;
  int32 size_id = 7;
  optional int32 updated_by_id = 8;
  int32 id = 9;
}

message ClientCompanyDeleteRequest {
  int32 id = 1;
  optional int32 deleted_by_id = 2;
}

message ClientCompanyListRequest {
  optional string sort = 1; // ["field_name", "ASC/DESC"]
  optional string range = 2;  // [start, end]
  optional string filter = 3; // {"field": "value", "field2": "value2"}
  optional int32 current_user_id = 4;
}

message ClientCompanyGetOneRequest {
  int32 id = 1;
}

message ClientCompanyListResponse {
  repeated ClientCompany data = 1;
  int32 total_count = 2;
}

service ClientCompanyService {
  rpc create (ClientCompanyCreateRequest) returns (ClientCompanyResponse);
  rpc update (ClientCompanyUpdateRequest) returns (ClientCompanyResponse);
  rpc delete (ClientCompanyDeleteRequest) returns (ClientCompanyResponse);
  rpc getOne (ClientCompanyGetOneRequest) returns (ClientCompanyResponse);
  rpc getList (ClientCompanyListRequest) returns (ClientCompanyListResponse);
}

// ContentType
message ContentType {
  int32 id = 1;
  string name = 2;
  optional string description = 3;
  optional google.protobuf.Timestamp created_at = 4;
  optional google.protobuf.Timestamp updated_at = 5;
  optional google.protobuf.Timestamp deleted_at = 6;
  optional int32 created_by_id = 7;
  optional int32 updated_by_id = 8;
  optional int32 deleted_by_id = 9;
}

message ContentTypeCreateRequest {
  string name = 1;
  optional string description = 2;
  int32 created_by_id = 3;
}

message ContentTypeResponse {
  ContentType data = 1;
}

message ContentTypeUpdateRequest {
  string name = 1;
  optional string description = 2;
  int32 updated_by_id = 3;
  int32 id = 4;
}

message ContentTypeDeleteRequest {
  int32 id = 1;
  optional int32 deleted_by_id = 2;
}

message ContentTypeListRequest {
  optional string sort = 1; // ["field_name", "ASC/DESC"]
  optional string range = 2;  // [start, end]
  optional string filter = 3; // {"field": "value", "field2": "value2"}
  optional int32  current_user_id = 4;
}

message ContentTypeGetOneRequest {
  int32 id = 1;
}

message ContentTypeListResponse {
  repeated ContentType data = 1;
  int32 total_count = 2;
}

service ContentTypeService {
  rpc create (ContentTypeCreateRequest) returns (ContentTypeResponse);
  rpc update (ContentTypeUpdateRequest) returns (ContentTypeResponse);
  rpc delete (ContentTypeDeleteRequest) returns (ContentTypeResponse);
  rpc getOne (ContentTypeGetOneRequest) returns (ContentTypeResponse);
  rpc getList (ContentTypeListRequest) returns (ContentTypeListResponse);
}